# Generated by Neurodocker and Reproenv.

Bootstrap: docker
From: fedora:36

%environment
export PATH="/opt/afni-latest:$PATH"
export AFNI_PLUGINPATH="/opt/afni-latest"
export ANTSPATH="/opt/ants-2.4.3/"
export PATH="/opt/ants-2.4.3:$PATH"
export CONDA_DIR="/opt/miniconda-latest"
export PATH="/opt/miniconda-latest/bin:$PATH"

%post
yum install -y -q \
    python2.7
yum clean all
rm -rf /var/cache/yum/*

yum install -y -q \
    R \
    cmake \
    curl \
    ed \
    gsl \
    libGLU \
    libXp \
    libXpm \
    libcurl-devel \
    libgomp \
    libjpeg-turbo-devel \
    libpng12 \
    mesa-dri-drivers \
    mesa-dri-drivers \
    mesa-libGLw \
    ncurses-compat-libs \
    netpbm-progs \
    openmotif \
    openssl-devel \
    python-is-python3 \
    python3-pip \
    tcsh \
    udunits2-devel \
    unzip \
    wget \
    which \
    which \
    xorg-x11-fonts-misc \
    xorg-x11-server-Xvfb
yum clean all
rm -rf /var/cache/yum/*

gsl_path="$(find / -name 'libgsl.so.??' || printf '')"
if [ -n "$gsl_path" ]; then \
  ln -sfv "$gsl_path" "$(dirname $gsl_path)/libgsl.so.0"; \
fi
ldconfig
mkdir -p /opt/afni-latest
echo "Downloading AFNI ..."
curl -fL https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
| tar -xz -C /opt/afni-latest --strip-components 1

yum install -y -q \
    curl \
    unzip
yum clean all
rm -rf /var/cache/yum/*
echo "Downloading ANTs ..."
curl -fsSL -o ants.zip https://github.com/ANTsX/ANTs/releases/download/v2.4.3/ants-2.4.3-centos7-X64-gcc.zip
unzip ants.zip -d /opt
mv /opt/ants-2.4.3/bin/* /opt/ants-2.4.3
rm ants.zip

yum install -y -q \
    bzip2 \
    curl
yum clean all
rm -rf /var/cache/yum/*
# Install dependencies.
export PATH="/opt/miniconda-latest/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-latest
rm -f "$conda_installer"
conda update -yq -nbase conda
# Prefer packages in conda-forge
conda config --system --prepend channels conda-forge
# Packages in lower-priority channels not considered if a package with the same
# name exists in a higher priority channel. Can dramatically speed up installations.
# Conda recommends this as a default
# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html
conda config --set channel_priority strict
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
# Enable `conda activate`
conda init bash
bash -c "source activate nipype
  python -m pip install --no-cache-dir  \
      "nipype" \
      "pybids" \
      "nilearn""
# Clean up
sync && conda clean --all --yes && sync
rm -rf ~/.cache/pip/*

# Save specification to JSON.
printf '{ \
  "pkg_manager": "yum", \
  "existing_users": [ \
    "root" \
  ], \
  "instructions": [ \
    { \
      "name": "from_", \
      "kwds": { \
        "base_image": "fedora:36" \
      } \
    }, \
    { \
      "name": "install", \
      "kwds": { \
        "pkgs": [ \
          "python2.7" \
        ], \
        "opts": null \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "yum install -y -q \\\\\\n    python2.7\\nyum clean all\\nrm -rf /var/cache/yum/*" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "PATH": "/opt/afni-latest:$PATH", \
        "AFNI_PLUGINPATH": "/opt/afni-latest" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "yum install -y -q \\\\\\n    R \\\\\\n    cmake \\\\\\n    curl \\\\\\n    ed \\\\\\n    gsl \\\\\\n    libGLU \\\\\\n    libXp \\\\\\n    libXpm \\\\\\n    libcurl-devel \\\\\\n    libgomp \\\\\\n    libjpeg-turbo-devel \\\\\\n    libpng12 \\\\\\n    mesa-dri-drivers \\\\\\n    mesa-dri-drivers \\\\\\n    mesa-libGLw \\\\\\n    ncurses-compat-libs \\\\\\n    netpbm-progs \\\\\\n    openmotif \\\\\\n    openssl-devel \\\\\\n    python-is-python3 \\\\\\n    python3-pip \\\\\\n    tcsh \\\\\\n    udunits2-devel \\\\\\n    unzip \\\\\\n    wget \\\\\\n    which \\\\\\n    which \\\\\\n    xorg-x11-fonts-misc \\\\\\n    xorg-x11-server-Xvfb\\nyum clean all\\nrm -rf /var/cache/yum/*\\n\\ngsl_path=\\"$\(find / -name '"'"'libgsl.so.??'"'"' || printf '"'"''"'"'\)\\"\\nif [ -n \\"$gsl_path\\" ]; then \\\\\\n  ln -sfv \\"$gsl_path\\" \\"$\(dirname $gsl_path\)/libgsl.so.0\\"; \\\\\\nfi\\nldconfig\\nmkdir -p /opt/afni-latest\\necho \\"Downloading AFNI ...\\"\\ncurl -fL https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \\\\\\n| tar -xz -C /opt/afni-latest --strip-components 1" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "ANTSPATH": "/opt/ants-2.4.3/", \
        "PATH": "/opt/ants-2.4.3:$PATH" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "yum install -y -q \\\\\\n    curl \\\\\\n    unzip\\nyum clean all\\nrm -rf /var/cache/yum/*\\necho \\"Downloading ANTs ...\\"\\ncurl -fsSL -o ants.zip https://github.com/ANTsX/ANTs/releases/download/v2.4.3/ants-2.4.3-centos7-X64-gcc.zip\\nunzip ants.zip -d /opt\\nmv /opt/ants-2.4.3/bin/* /opt/ants-2.4.3\\nrm ants.zip" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "CONDA_DIR": "/opt/miniconda-latest", \
        "PATH": "/opt/miniconda-latest/bin:$PATH" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "yum install -y -q \\\\\\n    bzip2 \\\\\\n    curl\\nyum clean all\\nrm -rf /var/cache/yum/*\\n# Install dependencies.\\nexport PATH=\\"/opt/miniconda-latest/bin:$PATH\\"\\necho \\"Downloading Miniconda installer ...\\"\\nconda_installer=\\"/tmp/miniconda.sh\\"\\ncurl -fsSL -o \\"$conda_installer\\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\\nbash \\"$conda_installer\\" -b -p /opt/miniconda-latest\\nrm -f \\"$conda_installer\\"\\nconda update -yq -nbase conda\\n# Prefer packages in conda-forge\\nconda config --system --prepend channels conda-forge\\n# Packages in lower-priority channels not considered if a package with the same\\n# name exists in a higher priority channel. Can dramatically speed up installations.\\n# Conda recommends this as a default\\n# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html\\nconda config --set channel_priority strict\\nconda config --system --set auto_update_conda false\\nconda config --system --set show_channel_urls true\\n# Enable `conda activate`\\nconda init bash\\nbash -c \\"source activate nipype\\n  python -m pip install --no-cache-dir  \\\\\\n      \\"nipype\\" \\\\\\n      \\"pybids\\" \\\\\\n      \\"nilearn\\"\\"\\n# Clean up\\nsync && conda clean --all --yes && sync\\nrm -rf ~/.cache/pip/*" \
      } \
    } \
  ] \
}' > /.reproenv.json
# End saving to specification to JSON.
